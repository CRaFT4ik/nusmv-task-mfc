-- specification !( F (((client_1.state = WAIT & client_2.state = WAIT) & client_1.K < client_2.K) ->  X (client_1.state = WAIT & (client_2.state = READY | client_2.state = SERVICING))))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    client_1.K = 0
    client_2.K = 0
    client_3.K = 0
    client_4.K = 0
    client_5.K = 0
    timer_lock[1] = FALSE
    timer_lock[2] = FALSE
    timer_lock[3] = FALSE
    timer_lock[4] = FALSE
    timer_lock[5] = FALSE
    M = 5
    client_states[1] = NOT_COME
    client_states[2] = NOT_COME
    client_states[3] = NOT_COME
    client_states[4] = NOT_COME
    client_states[5] = NOT_COME
    windows[1] = 0
    windows[2] = 0
    windows[3] = 0
    freze_time_5 = FALSE
    freze_time_4 = FALSE
    freze_time_3 = FALSE
    freze_time_2 = FALSE
    freze_time_1 = FALSE
    can_dec_5 = FALSE
    can_dec_4 = FALSE
    can_dec_3 = FALSE
    can_dec_2 = FALSE
    can_dec_1 = FALSE
    is_timer_locked = FALSE
    can_take_window = FALSE
    free_windows = TRUE
    win_3 = 0
    win_2 = 0
    win_1 = 0
    _K = 6
    _M = 5
    client_1.next_in_queue = TRUE
    client_1.nq_5 = FALSE
    client_1.nq_4 = FALSE
    client_1.nq_3 = FALSE
    client_1.nq_2 = FALSE
    client_1.nq_1 = TRUE
    client_1.state = NOT_COME
    client_2.next_in_queue = TRUE
    client_2.nq_5 = FALSE
    client_2.nq_4 = FALSE
    client_2.nq_3 = FALSE
    client_2.nq_2 = TRUE
    client_2.nq_1 = FALSE
    client_2.state = NOT_COME
    client_3.next_in_queue = TRUE
    client_3.nq_5 = FALSE
    client_3.nq_4 = FALSE
    client_3.nq_3 = TRUE
    client_3.nq_2 = FALSE
    client_3.nq_1 = FALSE
    client_3.state = NOT_COME
    client_4.next_in_queue = TRUE
    client_4.nq_5 = FALSE
    client_4.nq_4 = TRUE
    client_4.nq_3 = FALSE
    client_4.nq_2 = FALSE
    client_4.nq_1 = FALSE
    client_4.state = NOT_COME
    client_5.next_in_queue = TRUE
    client_5.nq_5 = TRUE
    client_5.nq_4 = FALSE
    client_5.nq_3 = FALSE
    client_5.nq_2 = FALSE
    client_5.nq_1 = FALSE
    client_5.state = NOT_COME
  -> Input: 1.2 <-
    _process_selector_ = client_1
    running = FALSE
    client_5.running = FALSE
    client_4.running = FALSE
    client_3.running = FALSE
    client_2.running = FALSE
    client_1.running = TRUE
  -> State: 1.2 <-
    client_states[1] = JUST_COME
    client_1.state = JUST_COME
  -> Input: 1.3 <-
    _process_selector_ = client_2
    client_2.running = TRUE
    client_1.running = FALSE
  -> State: 1.3 <-
    client_states[2] = JUST_COME
    client_2.state = JUST_COME
  -> Input: 1.4 <-
    _process_selector_ = client_3
    client_3.running = TRUE
    client_2.running = FALSE
  -> State: 1.4 <-
    client_states[3] = JUST_COME
    client_3.state = JUST_COME
  -> Input: 1.5 <-
    _process_selector_ = client_4
    client_4.running = TRUE
    client_3.running = FALSE
  -> State: 1.5 <-
    client_states[4] = JUST_COME
    client_4.state = JUST_COME
  -> Input: 1.6 <-
    _process_selector_ = client_5
    client_5.running = TRUE
    client_4.running = FALSE
  -> State: 1.6 <-
    client_states[5] = JUST_COME
    client_5.state = JUST_COME
  -> Input: 1.7 <-
    _process_selector_ = main
    running = TRUE
    client_5.running = FALSE
  -> State: 1.7 <-
  -> Input: 1.8 <-
    _process_selector_ = client_1
    running = FALSE
    client_1.running = TRUE
  -- Loop starts here
  -> State: 1.8 <-
    client_1.K = 6
    timer_lock[1] = TRUE
    M = 4
    client_states[1] = WAIT
    is_timer_locked = TRUE
    can_take_window = TRUE
    client_1.state = WAIT
  -> Input: 1.9 <-
  -> State: 1.9 <-
    client_states[1] = READY
    windows[1] = 1
    win_1 = 1
    client_1.state = READY
  -> Input: 1.10 <-
    _process_selector_ = client_2
    client_2.running = TRUE
    client_1.running = FALSE
  -> State: 1.10 <-
    client_2.K = 6
    timer_lock[2] = TRUE
    M = 3
    client_states[2] = WAIT
    client_2.state = WAIT
  -> Input: 1.11 <-
    _process_selector_ = client_3
    client_3.running = TRUE
    client_2.running = FALSE
  -> State: 1.11 <-
    client_3.K = 6
    timer_lock[3] = TRUE
    M = 2
    client_states[3] = WAIT
    client_3.state = WAIT
  -> Input: 1.12 <-
    _process_selector_ = client_4
    client_4.running = TRUE
    client_3.running = FALSE
  -> State: 1.12 <-
    client_4.K = 6
    timer_lock[4] = TRUE
    M = 1
    client_states[4] = WAIT
    client_4.state = WAIT
  -> Input: 1.13 <-
    _process_selector_ = client_5
    client_5.running = TRUE
    client_4.running = FALSE
  -> State: 1.13 <-
    client_5.K = 6
    timer_lock[5] = TRUE
    M = 0
    client_states[5] = WAIT
    client_5.state = WAIT
  -> Input: 1.14 <-
    _process_selector_ = main
    running = TRUE
    client_5.running = FALSE
  -> State: 1.14 <-
  -> Input: 1.15 <-
    _process_selector_ = client_4
    running = FALSE
    client_4.running = TRUE
  -> State: 1.15 <-
    client_states[4] = READY
    windows[2] = 4
    win_2 = 4
    client_4.state = READY
  -> Input: 1.16 <-
  -> State: 1.16 <-
    client_4.K = 1
    client_states[4] = SERVICING
    client_4.state = SERVICING
  -> Input: 1.17 <-
    _process_selector_ = client_5
    client_5.running = TRUE
    client_4.running = FALSE
  -> State: 1.17 <-
    client_states[5] = READY
    client_5.state = READY
  -> Input: 1.18 <-
    _process_selector_ = client_3
    client_5.running = FALSE
    client_3.running = TRUE
  -> State: 1.18 <-
    client_states[3] = READY
    windows[3] = 3
    can_take_window = FALSE
    free_windows = FALSE
    win_3 = 3
    client_3.state = READY
  -> Input: 1.19 <-
    _process_selector_ = client_5
    client_5.running = TRUE
    client_3.running = FALSE
  -> State: 1.19 <-
    client_5.K = 2
    client_states[5] = SERVICING
    client_5.state = SERVICING
  -> Input: 1.20 <-
  -> State: 1.20 <-
    timer_lock[5] = FALSE
  -> Input: 1.21 <-
    _process_selector_ = client_4
    client_5.running = FALSE
    client_4.running = TRUE
  -> State: 1.21 <-
    timer_lock[4] = FALSE
  -> Input: 1.22 <-
    _process_selector_ = client_3
    client_4.running = FALSE
    client_3.running = TRUE
  -> State: 1.22 <-
    client_3.K = 2
    client_states[3] = SERVICING
    client_3.state = SERVICING
  -> Input: 1.23 <-
  -> State: 1.23 <-
    timer_lock[3] = FALSE
  -> Input: 1.24 <-
    _process_selector_ = client_2
    client_3.running = FALSE
    client_2.running = TRUE
  -> State: 1.24 <-
    timer_lock[2] = FALSE
  -> Input: 1.25 <-
    _process_selector_ = client_1
    client_2.running = FALSE
    client_1.running = TRUE
  -> State: 1.25 <-
    client_1.K = 2
    client_states[1] = SERVICING
    client_1.state = SERVICING
  -> Input: 1.26 <-
  -> State: 1.26 <-
    timer_lock[1] = FALSE
    freze_time_4 = TRUE
    can_dec_5 = TRUE
    can_dec_4 = TRUE
    can_dec_3 = TRUE
    can_dec_2 = TRUE
    can_dec_1 = TRUE
    is_timer_locked = FALSE
  -> Input: 1.27 <-
    _process_selector_ = main
    running = TRUE
    client_1.running = FALSE
  -> State: 1.27 <-
    client_1.K = 1
    client_2.K = 5
    client_3.K = 1
    client_4.K = 0
    client_5.K = 1
    timer_lock[4] = TRUE
    freze_time_4 = FALSE
    can_dec_5 = FALSE
    can_dec_4 = FALSE
    can_dec_3 = FALSE
    can_dec_2 = FALSE
    can_dec_1 = FALSE
    is_timer_locked = TRUE
  -> Input: 1.28 <-
    _process_selector_ = client_4
    running = FALSE
    client_4.running = TRUE
  -> State: 1.28 <-
    client_states[4] = SERVICED
    client_4.state = SERVICED
  -> Input: 1.29 <-
  -> State: 1.29 <-
    M = 1
    client_states[4] = NOT_COME
    windows[2] = 0
    can_take_window = TRUE
    free_windows = TRUE
    win_2 = 0
    client_4.state = NOT_COME
  -> Input: 1.30 <-
    _process_selector_ = client_2
    client_4.running = FALSE
    client_2.running = TRUE
  -> State: 1.30 <-
    timer_lock[2] = TRUE
    client_states[2] = READY
    windows[2] = 2
    can_take_window = FALSE
    free_windows = FALSE
    win_2 = 2
    client_2.state = READY
  -> Input: 1.31 <-
    _process_selector_ = client_4
    client_4.running = TRUE
    client_2.running = FALSE
  -> State: 1.31 <-
    timer_lock[4] = FALSE
  -> Input: 1.32 <-
    _process_selector_ = client_2
    client_4.running = FALSE
    client_2.running = TRUE
  -> State: 1.32 <-
    client_2.K = 1
    client_states[2] = SERVICING
    client_2.state = SERVICING
  -> Input: 1.33 <-
  -> State: 1.33 <-
    timer_lock[2] = FALSE
    freze_time_5 = TRUE
    freze_time_3 = TRUE
    freze_time_2 = TRUE
    freze_time_1 = TRUE
    can_dec_5 = TRUE
    can_dec_3 = TRUE
    can_dec_2 = TRUE
    can_dec_1 = TRUE
    is_timer_locked = FALSE
  -> Input: 1.34 <-
    _process_selector_ = main
    running = TRUE
    client_2.running = FALSE
  -> State: 1.34 <-
    client_1.K = 0
    client_2.K = 0
    client_3.K = 0
    client_5.K = 0
    timer_lock[1] = TRUE
    timer_lock[2] = TRUE
    timer_lock[3] = TRUE
    timer_lock[5] = TRUE
    freze_time_5 = FALSE
    freze_time_3 = FALSE
    freze_time_2 = FALSE
    freze_time_1 = FALSE
    can_dec_5 = FALSE
    can_dec_3 = FALSE
    can_dec_2 = FALSE
    can_dec_1 = FALSE
    is_timer_locked = TRUE
  -> Input: 1.35 <-
    _process_selector_ = client_3
    running = FALSE
    client_3.running = TRUE
  -> State: 1.35 <-
    client_states[3] = SERVICED
    client_3.state = SERVICED
  -> Input: 1.36 <-
    _process_selector_ = client_5
    client_5.running = TRUE
    client_3.running = FALSE
  -> State: 1.36 <-
    client_states[5] = SERVICED
    client_5.state = SERVICED
  -> Input: 1.37 <-
  -> State: 1.37 <-
    M = 2
    client_states[5] = NOT_COME
    client_5.state = NOT_COME
  -> Input: 1.38 <-
    _process_selector_ = client_3
    client_5.running = FALSE
    client_3.running = TRUE
  -> State: 1.38 <-
    M = 3
    client_states[3] = NOT_COME
    windows[3] = 0
    can_take_window = TRUE
    free_windows = TRUE
    win_3 = 0
    client_3.state = NOT_COME
  -> Input: 1.39 <-
    _process_selector_ = client_1
    client_3.running = FALSE
    client_1.running = TRUE
  -> State: 1.39 <-
    client_states[1] = SERVICED
    client_1.state = SERVICED
  -> Input: 1.40 <-
    _process_selector_ = client_2
    client_2.running = TRUE
    client_1.running = FALSE
  -> State: 1.40 <-
    client_states[2] = SERVICED
    client_2.state = SERVICED
  -> Input: 1.41 <-
  -> State: 1.41 <-
    M = 4
    client_states[2] = NOT_COME
    windows[2] = 0
    win_2 = 0
    client_2.state = NOT_COME
  -> Input: 1.42 <-
    _process_selector_ = client_1
    client_2.running = FALSE
    client_1.running = TRUE
  -> State: 1.42 <-
    M = 5
    client_states[1] = NOT_COME
    windows[1] = 0
    can_take_window = FALSE
    win_1 = 0
    client_1.state = NOT_COME
  -> Input: 1.43 <-
    _process_selector_ = client_4
    client_4.running = TRUE
    client_1.running = FALSE
  -> State: 1.43 <-
    client_states[4] = JUST_COME
    client_4.state = JUST_COME
  -> Input: 1.44 <-
    _process_selector_ = client_5
    client_5.running = TRUE
    client_4.running = FALSE
  -> State: 1.44 <-
    timer_lock[5] = FALSE
    client_states[5] = JUST_COME
    client_5.state = JUST_COME
  -> Input: 1.45 <-
    _process_selector_ = client_3
    client_5.running = FALSE
    client_3.running = TRUE
  -> State: 1.45 <-
    timer_lock[3] = FALSE
    client_states[3] = JUST_COME
    client_3.state = JUST_COME
  -> Input: 1.46 <-
    _process_selector_ = client_2
    client_3.running = FALSE
    client_2.running = TRUE
  -> State: 1.46 <-
    timer_lock[2] = FALSE
    client_states[2] = JUST_COME
    client_2.state = JUST_COME
  -> Input: 1.47 <-
    _process_selector_ = client_1
    client_2.running = FALSE
    client_1.running = TRUE
  -> State: 1.47 <-
    timer_lock[1] = FALSE
    client_states[1] = JUST_COME
    is_timer_locked = FALSE
    client_1.state = JUST_COME
  -> Input: 1.48 <-
  -> State: 1.48 <-
    client_1.K = 6
    timer_lock[1] = TRUE
    M = 4
    client_states[1] = WAIT
    is_timer_locked = TRUE
    can_take_window = TRUE
    client_1.state = WAIT
